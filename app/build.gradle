/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'jvm-test-suite'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

ext {
    autoValueVersion = "1.10.4"
}

dependencies {
    compileOnlyApi("com.google.auto.value:auto-value-annotations:${autoValueVersion}")

    annotationProcessor("com.google.auto.value:auto-value:${autoValueVersion}")
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.0')

            dependencies {
                compileOnly "com.google.auto.value:auto-value-annotations:${autoValueVersion}"

                annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"
            }
        }

        componentTest(JvmTestSuite) {
            useJUnitJupiter('5.10.0')

            dependencies {
                compileOnly "com.google.auto.value:auto-value-annotations:${autoValueVersion}"

                annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"
            }

            targets {
                all {
                    testTask.configure {
                        shouldRunAfter(test)
                    }
                }
            }
        }
    }
}

tasks.named('check') {
    dependsOn(testing.suites.componentTest)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

